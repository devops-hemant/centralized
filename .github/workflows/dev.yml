name: centralized_Code_Deploy_auto

on:
  workflow_call:
    inputs:
      environment:
        description: 'deploy to'
        type: string
        required: true

jobs:
  centralized_code_deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      DATABRICKS_WORKSPACE_URL: ${{ vars.URL }}
      DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
      USERNAME: ${{ github.actor }}

    steps: 
      - name: Pipeline run information
        run: |
          echo "This pipeline is triggered by ${{github.actor}}"
          echo "Selected environment is ${{ inputs.environment }}"
          
      - name: Checkout
        uses: actions/checkout@v4
        with:
           fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4.7.1
        with:
          python-version: '3.11.5' # Change to your Python version if needed
  
      - name: Install Databricks CLI
        run: pip install databricks-cli
  
      - name: Deploy to Databricks
        run: |
            set -x
            touch tfile

            echo "${{ secrets.DATABRICKS_TOKEN }}" > tfile

            databricks configure --host='${{ vars.URL }}' --token-file tfile


            git diff --name-only ${{ github.event.before }} ${{ github.event.after }} > locations.txt

            filenames=$(cat locations.txt)

            echo "#######################################################"
            echo "$filenames"
            echo "#######################################################"

            dbx_deploy() {
              echo "#################### Deploying $file $1 file #####################"
              dir=${file%/*}
              databricks workspace mkdirs /%dir
              databricks workspace import -o -l $1 "$file" "/${file}"
              echo "################ Deployment of $file $1 file done ################"
            }

            for file in $filenames
            do
              if [[ -f $file ]]
              then
                  case $file in
                      *.@'(py|ipynb|html)')
                      dbx_deploy PYTHON
                      ;;

                      # *.ipynb)
                      # dbx_deploy PYTHON
                      # ;;

                      # *.html)
                      # dbx_deploy PYTHON
                      # ;;

                      *.sql)
                      dbx_deploy SQL
                      ;;

                      *.r)
                      dbx_deploy R
                      ;;

                      *.scala)
                      dbx_deploy SCALA
                      ;;

                      *)
                      echo "$file is not a compatible file format"
                      ;;
                  esac
              else
                echo "$file file not avaialble"
              fi
            done

            rm -rf tfil locations.txt
